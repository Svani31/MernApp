// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Define the User model
model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String @unique
  password String
  image    String

  sentMessage   Chat[] @relation("sender")
  reciveMessage Chat[] @relation("reciver")
}

model Chat {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  context   String
  senderId  String   @db.ObjectId
  reciverId String   @db.ObjectId
  createdAt DateTime @default(now())
  // 
  sender    User     @relation(name: "sender", fields: [senderId], references: [id])
  reciver   User     @relation(name: "reciver", fields: [reciverId], references: [id])
}

// model User {
//   id       String @id @default(auto()) @map("_id") @db.ObjectId
//   name     String
//   email    String @unique
//   password String
//   image    String
//   chat     Chat[]
// }

// model Chat {
//   id      String    @id @default(auto()) @map("_id") @db.ObjectId
//   message Message[]
//   userId  String?   @db.ObjectId

//   User User? @relation(fields: [userId], references: [id])
// }

// model Message {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   context   String
//   senderId  String   @db.ObjectId
//   reciverId String   @db.ObjectId
//   createdAt DateTime @default(now())
//   chatId    String?  @db.ObjectId
//   // 

//   Chat Chat? @relation(fields: [chatId], references: [id])
// }

// schema.prisma
// model User {
//   id             String        @id @default(auto()) @map("_id") @db.ObjectId
//   username       String
//   email          String
//   password       String
//   Conversation   Conversation? @relation(fields: [conversationId], references: [id])
//   conversationId String?       @db.ObjectId
//   Message        Message[]
// }

// model Conversation {
//   id           String    @id @default(auto()) @map("_id") @db.ObjectId
//   participants User[]
//   Message      Message[]
// }

// model Message {
//   id             String       @id @default(auto()) @map("_id") @db.ObjectId
//   conversation   Conversation @relation(fields: [conversationId], references: [id])
//   conversationId String       @db.ObjectId
//   sender         User         @relation(fields: [senderId], references: [id])
//   senderId       String       @db.ObjectId
//   text           String
//   createdAt      DateTime
//   // Add other relevant message fields
// }
